{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gen\tnevals\n",
      "0  \t20    \n",
      "1  \t10    \n",
      "2  \t10    \n",
      "3  \t10    \n",
      "4  \t9     \n",
      "5  \t7     \n",
      "6  \t10    \n",
      "7  \t8     \n",
      "8  \t10    \n",
      "9  \t8     \n",
      "10 \t9     \n",
      "11 \t9     \n",
      "12 \t9     \n",
      "13 \t8     \n",
      "14 \t8     \n",
      "15 \t10    \n",
      "16 \t8     \n",
      "17 \t9     \n",
      "18 \t9     \n",
      "19 \t10    \n",
      "20 \t10    \n",
      "21 \t9     \n",
      "22 \t9     \n",
      "23 \t9     \n",
      "24 \t8     \n",
      "25 \t8     \n",
      "26 \t9     \n",
      "27 \t9     \n",
      "28 \t7     \n",
      "29 \t10    \n",
      "30 \t9     \n",
      "31 \t8     \n",
      "32 \t9     \n",
      "33 \t7     \n",
      "34 \t8     \n",
      "35 \t9     \n",
      "36 \t9     \n",
      "37 \t10    \n",
      "38 \t7     \n",
      "39 \t7     \n",
      "40 \t9     \n",
      "41 \t9     \n",
      "42 \t9     \n",
      "43 \t10    \n",
      "44 \t10    \n",
      "45 \t9     \n",
      "46 \t9     \n",
      "47 \t9     \n",
      "48 \t10    \n",
      "49 \t9     \n",
      "50 \t8     \n",
      "51 \t9     \n",
      "52 \t8     \n",
      "53 \t10    \n",
      "54 \t8     \n",
      "55 \t10    \n",
      "56 \t10    \n",
      "57 \t9     \n",
      "58 \t9     \n",
      "59 \t8     \n",
      "60 \t10    \n",
      "61 \t7     \n",
      "62 \t9     \n",
      "63 \t8     \n",
      "64 \t8     \n",
      "65 \t10    \n",
      "66 \t9     \n",
      "67 \t9     \n",
      "68 \t7     \n",
      "69 \t8     \n",
      "70 \t9     \n",
      "71 \t9     \n",
      "72 \t8     \n",
      "73 \t10    \n",
      "74 \t9     \n",
      "75 \t10    \n",
      "76 \t10    \n",
      "77 \t9     \n",
      "78 \t10    \n",
      "79 \t10    \n",
      "80 \t9     \n",
      "81 \t9     \n",
      "82 \t10    \n",
      "83 \t7     \n",
      "84 \t9     \n",
      "85 \t8     \n",
      "86 \t10    \n",
      "87 \t9     \n",
      "88 \t10    \n",
      "89 \t10    \n",
      "90 \t9     \n",
      "91 \t9     \n",
      "92 \t8     \n",
      "93 \t9     \n",
      "94 \t10    \n",
      "95 \t10    \n",
      "96 \t9     \n",
      "97 \t9     \n",
      "98 \t10    \n",
      "99 \t10    \n",
      "100\t10    \n",
      "Best Match Schedule:\n",
      "1 Match: ('Punjab Kings', 'Delhi Capitals'), Venue: Wankhede Stadium, Mumbai, Date: 2022-03-26 00:00:00\n",
      "2 Match: ('Kolkata Knight Riders', 'Lucknow Super Giants'), Venue: Brabourne Stadium, Mumbai, Date: 2022-03-27 00:00:00\n",
      "3 Match: ('Sunrisers Hyderabad', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-03-27 00:00:00\n",
      "4 Match: ('Mumbai Indians', 'Kolkata Knight Riders'), Venue: Wankhede Stadium, Mumbai, Date: 2022-03-28 00:00:00\n",
      "5 Match: ('Kolkata Knight Riders', 'Sunrisers Hyderabad'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-03-29 00:00:00\n",
      "6 Match: ('Chennai Super Kings', 'Gujarat Titans'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-03-30 00:00:00\n",
      "7 Match: ('Rajasthan Royals', 'Chennai Super Kings'), Venue: Brabourne Stadium, Mumbai, Date: 2022-03-31 00:00:00\n",
      "8 Match: ('Royal Challengers Bangalore', 'Mumbai Indians'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-01 00:00:00\n",
      "9 Match: ('Mumbai Indians', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-02 00:00:00\n",
      "10 Match: ('Gujarat Titans', 'Lucknow Super Giants'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-02 00:00:00\n",
      "11 Match: ('Chennai Super Kings', 'Rajasthan Royals'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-03 00:00:00\n",
      "12 Match: ('Mumbai Indians', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-04 00:00:00\n",
      "13 Match: ('Mumbai Indians', 'Rajasthan Royals'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-05 00:00:00\n",
      "14 Match: ('Kolkata Knight Riders', 'Chennai Super Kings'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-06 00:00:00\n",
      "15 Match: ('Rajasthan Royals', 'Delhi Capitals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-07 00:00:00\n",
      "16 Match: ('Chennai Super Kings', 'Lucknow Super Giants'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-08 00:00:00\n",
      "17 Match: ('Rajasthan Royals', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-09 00:00:00\n",
      "18 Match: ('Delhi Capitals', 'Gujarat Titans'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-09 00:00:00\n",
      "19 Match: ('Gujarat Titans', 'Royal Challengers Bangalore'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-10 00:00:00\n",
      "20 Match: ('Punjab Kings', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-11 00:00:00\n",
      "21 Match: ('Punjab Kings', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-12 00:00:00\n",
      "22 Match: ('Sunrisers Hyderabad', 'Chennai Super Kings'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-13 00:00:00\n",
      "23 Match: ('Delhi Capitals', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-14 00:00:00\n",
      "24 Match: ('Lucknow Super Giants', 'Chennai Super Kings'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-15 00:00:00\n",
      "25 Match: ('Rajasthan Royals', 'Royal Challengers Bangalore'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-16 00:00:00\n",
      "26 Match: ('Kolkata Knight Riders', 'Royal Challengers Bangalore'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-16 00:00:00\n",
      "27 Match: ('Lucknow Super Giants', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-17 00:00:00\n",
      "28 Match: ('Lucknow Super Giants', 'Gujarat Titans'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-17 00:00:00\n",
      "29 Match: ('Gujarat Titans', 'Punjab Kings'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-18 00:00:00\n",
      "30 Match: ('Chennai Super Kings', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-19 00:00:00\n",
      "31 Match: ('Chennai Super Kings', 'Mumbai Indians'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-20 00:00:00\n",
      "32 Match: ('Kolkata Knight Riders', 'Gujarat Titans'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-21 00:00:00\n",
      "33 Match: ('Lucknow Super Giants', 'Delhi Capitals'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-22 00:00:00\n",
      "34 Match: ('Kolkata Knight Riders', 'Lucknow Super Giants'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-04-23 00:00:00\n",
      "35 Match: ('Rajasthan Royals', 'Punjab Kings'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-23 00:00:00\n",
      "36 Match: ('Chennai Super Kings', 'Royal Challengers Bangalore'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-24 00:00:00\n",
      "37 Match: ('Gujarat Titans', 'Chennai Super Kings'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-25 00:00:00\n",
      "38 Match: ('Rajasthan Royals', 'Chennai Super Kings'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-26 00:00:00\n",
      "39 Match: ('Punjab Kings', 'Royal Challengers Bangalore'), Venue: Wankhede Stadium, Mumbai, Date: 2022-04-28 00:00:00\n",
      "40 Match: ('Lucknow Super Giants', 'Rajasthan Royals'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-04-29 00:00:00\n",
      "41 Match: ('Chennai Super Kings', 'Royal Challengers Bangalore'), Venue: Brabourne Stadium, Mumbai, Date: 2022-04-30 00:00:00\n",
      "42 Match: ('Gujarat Titans', 'Punjab Kings'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-01 00:00:00\n",
      "43 Match: ('Punjab Kings', 'Lucknow Super Giants'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-05-01 00:00:00\n",
      "44 Match: ('Punjab Kings', 'Kolkata Knight Riders'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-02 00:00:00\n",
      "45 Match: ('Gujarat Titans', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-03 00:00:00\n",
      "46 Match: ('Chennai Super Kings', 'Gujarat Titans'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-05-04 00:00:00\n",
      "47 Match: ('Lucknow Super Giants', 'Rajasthan Royals'), Venue: Brabourne Stadium, Mumbai, Date: 2022-05-05 00:00:00\n",
      "48 Match: ('Mumbai Indians', 'Lucknow Super Giants'), Venue: Brabourne Stadium, Mumbai, Date: 2022-05-06 00:00:00\n",
      "49 Match: ('Rajasthan Royals', 'Lucknow Super Giants'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-07 00:00:00\n",
      "50 Match: ('Chennai Super Kings', 'Punjab Kings'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-08 00:00:00\n",
      "51 Match: ('Kolkata Knight Riders', 'Delhi Capitals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-08 00:00:00\n",
      "52 Match: ('Gujarat Titans', 'Delhi Capitals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-09 00:00:00\n",
      "53 Match: ('Punjab Kings', 'Kolkata Knight Riders'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-05-10 00:00:00\n",
      "54 Match: ('Gujarat Titans', 'Punjab Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-11 00:00:00\n",
      "55 Match: ('Punjab Kings', 'Royal Challengers Bangalore'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-12 00:00:00\n",
      "56 Match: ('Kolkata Knight Riders', 'Royal Challengers Bangalore'), Venue: Brabourne Stadium, Mumbai, Date: 2022-05-13 00:00:00\n",
      "57 Match: ('Rajasthan Royals', 'Royal Challengers Bangalore'), Venue: Maharashtra Cricket Association Stadium, Pune, Date: 2022-05-14 00:00:00\n",
      "58 Match: ('Chennai Super Kings', 'Kolkata Knight Riders'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-15 00:00:00\n",
      "59 Match: ('Lucknow Super Giants', 'Royal Challengers Bangalore'), Venue: Brabourne Stadium, Mumbai, Date: 2022-05-15 00:00:00\n",
      "60 Match: ('Punjab Kings', 'Rajasthan Royals'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-16 00:00:00\n",
      "61 Match: ('Punjab Kings', 'Delhi Capitals'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-17 00:00:00\n",
      "62 Match: ('Kolkata Knight Riders', 'Chennai Super Kings'), Venue: Dr DY Patil Sports Academy, Mumbai, Date: 2022-05-18 00:00:00\n",
      "63 Match: ('Rajasthan Royals', 'Gujarat Titans'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-19 00:00:00\n",
      "64 Match: ('Gujarat Titans', 'Punjab Kings'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-21 00:00:00\n",
      "65 Match: ('Chennai Super Kings', 'Mumbai Indians'), Venue: Wankhede Stadium, Mumbai, Date: 2022-05-22 00:00:00\n",
      "66 Match: ('Punjab Kings', 'Rajasthan Royals'), Venue: Eden Gardens, Kolkata, Date: 2022-05-24 00:00:00\n",
      "67 Match: ('Punjab Kings', 'Royal Challengers Bangalore'), Venue: Eden Gardens, Kolkata, Date: 2022-05-25 00:00:00\n",
      "68 Match: ('Rajasthan Royals', 'Sunrisers Hyderabad'), Venue: Narendra Modi Stadium, Ahmedabad, Date: 2022-05-27 00:00:00\n",
      "69 Match: ('Mumbai Indians', 'Royal Challengers Bangalore'), Venue: Narendra Modi Stadium, Ahmedabad, Date: 2022-05-29 00:00:00\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import random\n",
    "from itertools import combinations\n",
    "from deap import creator, base, tools, algorithms\n",
    "from datetime import datetime\n",
    "\n",
    "# Load your actual dataset from a CSV file\n",
    "df1 = pd.read_csv('IPL_Matches_2022.csv')\n",
    "df1['Date'] = pd.to_datetime(df1['Date'], format='%d-%m-%Y')\n",
    "\n",
    "# Sort the DataFrame by the 'Date' column\n",
    "df = df1.sort_values(by='Date')\n",
    "\n",
    "# Number of generations and population size for genetic algorithm\n",
    "num_generations = 100\n",
    "population_size = 20\n",
    "\n",
    "# Define genetic algorithm operators\n",
    "creator.create(\"FitnessMin\", base.Fitness, weights=(-1.0,))\n",
    "creator.create(\"Individual\", list, fitness=creator.FitnessMin)\n",
    "\n",
    "# Function to create an individual (a possible match schedule)\n",
    "# Function to create an individual (a possible match schedule)\n",
    "from random import shuffle\n",
    "def create_individual():\n",
    "    teams = df['Team1'].tolist()\n",
    "    venues = df['Venue'].tolist()\n",
    "    timings = df['Date'].tolist()\n",
    "\n",
    "    matches = list(combinations(teams, 2))\n",
    "    random.shuffle(matches)\n",
    "\n",
    "    schedule = []\n",
    "    day_matches = []\n",
    "    for match, venue, timing in zip(matches, venues, timings):\n",
    "        if len(day_matches) == 2:\n",
    "            schedule.extend(day_matches)\n",
    "            day_matches = []\n",
    "\n",
    "        # Check if a team is not playing against itself\n",
    "        if match[0] != match[1]:\n",
    "            day_matches.append({'Match': match, 'Venue': venue, 'Date': timing})\n",
    "\n",
    "    # Add the remaining matches\n",
    "    schedule.extend(day_matches)\n",
    "\n",
    "    # Sort the schedule by ascending date\n",
    "    schedule.sort(key=lambda x: x['Date'])\n",
    "\n",
    "    return schedule\n",
    "\n",
    "\n",
    "\n",
    "toolbox = base.Toolbox()\n",
    "toolbox.register(\"individual\", tools.initIterate, creator.Individual, create_individual)\n",
    "toolbox.register(\"population\", tools.initRepeat, list, toolbox.individual)\n",
    "\n",
    "# Function to evaluate the fitness of an individual (schedule)\n",
    "def evaluate(schedule):\n",
    "    unique_matches = set()\n",
    "    repeated_matches_penalty = 0\n",
    "    preparation_days_penalty = 0\n",
    "    for i, (match, _, _) in enumerate(schedule):\n",
    "        if match in unique_matches:\n",
    "            repeated_matches_penalty += 1\n",
    "        unique_matches.add(match)\n",
    "\n",
    "        # Penalize preparation day\n",
    "        if i > 0:\n",
    "            previous_date = schedule[i - 1]['Date']\n",
    "            current_date = schedule[i]['Date']\n",
    "            if (current_date - previous_date).days == 1:\n",
    "                preparation_days_penalty += 1\n",
    "\n",
    "    # 3. Balance the number of home and away matches for each team\n",
    "    home_away_penalty = 0\n",
    "    for team in df['Team1']:\n",
    "        home_matches = [match for match, _, _ in schedule if team in match and df[df['Team1'] == team]['Venue'].iloc[0] in [venue for _, venue, _ in schedule]]\n",
    "        away_matches = [match for match, _, _ in schedule if team in match and df[df['Team2'] == team]['Venue'].iloc[0] not in [venue for _, venue, _ in schedule]]\n",
    "        if len(home_matches) != len(away_matches):\n",
    "            home_away_penalty += abs(len(home_matches) - len(away_matches))\n",
    "\n",
    "    # Combine penalties and distances to calculate overall fitness\n",
    "    fitness = -repeated_matches_penalty - preparation_days_penalty - home_away_penalty\n",
    "\n",
    "    return (fitness,)\n",
    "\n",
    "\n",
    "# Genetic algorithm\n",
    "def genetic_algorithm(num_generations, population_size):\n",
    "    toolbox.register(\"evaluate\", evaluate)\n",
    "    toolbox.register(\"mate\", tools.cxOnePoint)\n",
    "    toolbox.register(\"mutate\", tools.mutShuffleIndexes, indpb=0.05)\n",
    "    toolbox.register(\"select\", tools.selTournament, tournsize=3)\n",
    "\n",
    "    population = toolbox.population(n=population_size)\n",
    "    algorithms.eaMuPlusLambda(population, toolbox, mu=population_size // 2, lambda_=population_size // 2,\n",
    "                              cxpb=0.7, mutpb=0.2, ngen=num_generations, stats=None, halloffame=None, verbose=True)\n",
    "    best_schedule = tools.selBest(population, k=1)[0]\n",
    "    return best_schedule\n",
    "\n",
    "# Run the genetic algorithm\n",
    "best_schedule = genetic_algorithm(num_generations, population_size)\n",
    "\n",
    "print(\"Best Match Schedule:\")\n",
    "\n",
    "sorted_schedule = sorted(best_schedule, key=lambda x: x['Date'])\n",
    "for index, match in enumerate(sorted_schedule, start=1):\n",
    "    print(f\"{index} Match: {match['Match']}, Venue: {match['Venue']}, Date: {match['Date']}\")\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
